// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TestCustomType.capnp

#include "TestCustomType.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<38> b_82d693938e21298f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    143,  41,  33, 142, 147, 147, 214, 130,
     21,   0,   0,   0,   1,   0,   0,   0,
    216, 213, 226, 231, 140, 218,   4, 135,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 101, 115, 116,  67, 117, 115, 116,
    111, 109,  84, 121, 112, 101,  46,  99,
     97, 112, 110, 112,  58,  76, 111, 110,
    103,  83, 101, 113,  84, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    108, 111, 110, 103,  83, 101, 113,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_82d693938e21298f = b_82d693938e21298f.words;
#if !CAPNP_LITE
static const uint16_t m_82d693938e21298f[] = {0};
static const uint16_t i_82d693938e21298f[] = {0};
const ::capnp::_::RawSchema s_82d693938e21298f = {
  0x82d693938e21298f, b_82d693938e21298f.words, 38, nullptr, m_82d693938e21298f,
  0, 1, i_82d693938e21298f, nullptr, nullptr, { &s_82d693938e21298f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_8384f1d80a8a62cb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    203,  98, 138,  10, 216, 241, 132, 131,
     21,   0,   0,   0,   1,   0,   0,   0,
    216, 213, 226, 231, 140, 218,   4, 135,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 101, 115, 116,  67, 117, 115, 116,
    111, 109,  84, 121, 112, 101,  46,  99,
     97, 112, 110, 112,  58,  68, 111, 117,
     98, 108, 101,  83, 101, 113,  84, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    100, 111, 117,  98, 108, 101,  83, 101,
    113,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8384f1d80a8a62cb = b_8384f1d80a8a62cb.words;
#if !CAPNP_LITE
static const uint16_t m_8384f1d80a8a62cb[] = {0};
static const uint16_t i_8384f1d80a8a62cb[] = {0};
const ::capnp::_::RawSchema s_8384f1d80a8a62cb = {
  0x8384f1d80a8a62cb, b_8384f1d80a8a62cb.words, 39, nullptr, m_8384f1d80a8a62cb,
  0, 1, i_8384f1d80a8a62cb, nullptr, nullptr, { &s_8384f1d80a8a62cb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_d2c5d1734fd78ce9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    233, 140, 215,  79, 115, 209, 197, 210,
     21,   0,   0,   0,   1,   0,   0,   0,
    216, 213, 226, 231, 140, 218,   4, 135,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 101, 115, 116,  67, 117, 115, 116,
    111, 109,  84, 121, 112, 101,  46,  99,
     97, 112, 110, 112,  58,  83, 116, 114,
    105, 110, 103,  84, 101, 115, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d2c5d1734fd78ce9 = b_d2c5d1734fd78ce9.words;
#if !CAPNP_LITE
static const uint16_t m_d2c5d1734fd78ce9[] = {0};
static const uint16_t i_d2c5d1734fd78ce9[] = {0};
const ::capnp::_::RawSchema s_d2c5d1734fd78ce9 = {
  0xd2c5d1734fd78ce9, b_d2c5d1734fd78ce9.words, 33, nullptr, m_d2c5d1734fd78ce9,
  0, 1, i_d2c5d1734fd78ce9, nullptr, nullptr, { &s_d2c5d1734fd78ce9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_c918ebd1cc490270 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    112,   2,  73, 204, 209, 235,  24, 201,
     21,   0,   0,   0,   1,   0,   0,   0,
    216, 213, 226, 231, 140, 218,   4, 135,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 101, 115, 116,  67, 117, 115, 116,
    111, 109,  84, 121, 112, 101,  46,  99,
     97, 112, 110, 112,  58,  83, 116, 114,
    105, 110, 103,  83, 101, 113,  84, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    115, 116, 114, 105, 110, 103,  83, 101,
    113,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    233, 140, 215,  79, 115, 209, 197, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c918ebd1cc490270 = b_c918ebd1cc490270.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c918ebd1cc490270[] = {
  &s_d2c5d1734fd78ce9,
};
static const uint16_t m_c918ebd1cc490270[] = {0};
static const uint16_t i_c918ebd1cc490270[] = {0};
const ::capnp::_::RawSchema s_c918ebd1cc490270 = {
  0xc918ebd1cc490270, b_c918ebd1cc490270.words, 39, d_c918ebd1cc490270, m_c918ebd1cc490270,
  1, 1, i_c918ebd1cc490270, nullptr, nullptr, { &s_c918ebd1cc490270, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_f127fe18c5073059 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89,  48,   7, 197,  24, 254,  39, 241,
     21,   0,   0,   0,   1,   0,   0,   0,
    216, 213, 226, 231, 140, 218,   4, 135,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 101, 115, 116,  67, 117, 115, 116,
    111, 109,  84, 121, 112, 101,  46,  99,
     97, 112, 110, 112,  58,  65, 114, 114,
     97, 121,  76, 111, 110, 103,  83, 101,
    113,  84, 101, 115, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
     97, 114, 114,  97, 121,  76, 111, 110,
    103,  83, 101, 113,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    143,  41,  33, 142, 147, 147, 214, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f127fe18c5073059 = b_f127fe18c5073059.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f127fe18c5073059[] = {
  &s_82d693938e21298f,
};
static const uint16_t m_f127fe18c5073059[] = {0};
static const uint16_t i_f127fe18c5073059[] = {0};
const ::capnp::_::RawSchema s_f127fe18c5073059 = {
  0xf127fe18c5073059, b_f127fe18c5073059.words, 39, d_f127fe18c5073059, m_f127fe18c5073059,
  1, 1, i_f127fe18c5073059, nullptr, nullptr, { &s_f127fe18c5073059, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<40> b_ca116072b678bceb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    235, 188, 120, 182, 114,  96,  17, 202,
     21,   0,   0,   0,   1,   0,   0,   0,
    216, 213, 226, 231, 140, 218,   4, 135,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 101, 115, 116,  67, 117, 115, 116,
    111, 109,  84, 121, 112, 101,  46,  99,
     97, 112, 110, 112,  58,  83, 101, 113,
     65, 114, 114,  97, 121,  76, 111, 110,
    103,  83, 101, 113,  84, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    115, 101, 113,  65, 114, 114,  97, 121,
     76, 111, 110, 103,  83, 101, 113,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     89,  48,   7, 197,  24, 254,  39, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ca116072b678bceb = b_ca116072b678bceb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ca116072b678bceb[] = {
  &s_f127fe18c5073059,
};
static const uint16_t m_ca116072b678bceb[] = {0};
static const uint16_t i_ca116072b678bceb[] = {0};
const ::capnp::_::RawSchema s_ca116072b678bceb = {
  0xca116072b678bceb, b_ca116072b678bceb.words, 40, d_ca116072b678bceb, m_ca116072b678bceb,
  1, 1, i_ca116072b678bceb, nullptr, nullptr, { &s_ca116072b678bceb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<153> b_c93b8b98d8d54fc1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    193,  79, 213, 216, 152, 139,  59, 201,
     21,   0,   0,   0,   1,   0,   1,   0,
    216, 213, 226, 231, 140, 218,   4, 135,
      7,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84, 101, 115, 116,  67, 117, 115, 116,
    111, 109,  84, 121, 112, 101,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 115,
    116,  67, 117, 115, 116, 111, 109,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   1,   0,   0,   3,   0,   1,   0,
     20,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   1,   0,   0,   3,   0,   1,   0,
     32,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   1,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
    116, 101, 115, 116,  76, 111, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  79,  99, 116, 101,
    116,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  76, 111, 110, 103,
     83, 101, 113,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    143,  41,  33, 142, 147, 147, 214, 130,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  83, 116, 114, 105,
    110, 103,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    233, 140, 215,  79, 115, 209, 197, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  83, 116, 114, 105,
    110, 103,  83, 101, 113,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    112,   2,  73, 204, 209, 235,  24, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  68, 111, 117,  98,
    108, 101,  83, 101, 113,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    203,  98, 138,  10, 216, 241, 132, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 115, 116,  65, 114, 114,  97,
    121,  76, 111, 110, 103,  83, 101, 113,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     89,  48,   7, 197,  24, 254,  39, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 113,  65, 114, 114,  97, 121,
     76, 111, 110, 103,  83, 101, 113,  84,
    101, 115, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    235, 188, 120, 182, 114,  96,  17, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c93b8b98d8d54fc1 = b_c93b8b98d8d54fc1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c93b8b98d8d54fc1[] = {
  &s_82d693938e21298f,
  &s_8384f1d80a8a62cb,
  &s_c918ebd1cc490270,
  &s_ca116072b678bceb,
  &s_d2c5d1734fd78ce9,
  &s_f127fe18c5073059,
};
static const uint16_t m_c93b8b98d8d54fc1[] = {7, 6, 5, 0, 2, 1, 3, 4};
static const uint16_t i_c93b8b98d8d54fc1[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_c93b8b98d8d54fc1 = {
  0xc93b8b98d8d54fc1, b_c93b8b98d8d54fc1.words, 153, d_c93b8b98d8d54fc1, m_c93b8b98d8d54fc1,
  6, 8, i_c93b8b98d8d54fc1, nullptr, nullptr, { &s_c93b8b98d8d54fc1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// LongSeqTest
constexpr uint16_t LongSeqTest::_capnpPrivate::dataWordSize;
constexpr uint16_t LongSeqTest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind LongSeqTest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LongSeqTest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// DoubleSeqTest
constexpr uint16_t DoubleSeqTest::_capnpPrivate::dataWordSize;
constexpr uint16_t DoubleSeqTest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DoubleSeqTest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DoubleSeqTest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// StringTest
constexpr uint16_t StringTest::_capnpPrivate::dataWordSize;
constexpr uint16_t StringTest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind StringTest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StringTest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// StringSeqTest
constexpr uint16_t StringSeqTest::_capnpPrivate::dataWordSize;
constexpr uint16_t StringSeqTest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind StringSeqTest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StringSeqTest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// ArrayLongSeqTest
constexpr uint16_t ArrayLongSeqTest::_capnpPrivate::dataWordSize;
constexpr uint16_t ArrayLongSeqTest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ArrayLongSeqTest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ArrayLongSeqTest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SeqArrayLongSeqTest
constexpr uint16_t SeqArrayLongSeqTest::_capnpPrivate::dataWordSize;
constexpr uint16_t SeqArrayLongSeqTest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SeqArrayLongSeqTest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SeqArrayLongSeqTest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TestCustomType
constexpr uint16_t TestCustomType::_capnpPrivate::dataWordSize;
constexpr uint16_t TestCustomType::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TestCustomType::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TestCustomType::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



